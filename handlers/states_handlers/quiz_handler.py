from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from keyboards.reply_keyboards import cancel_kb
from run import Mr_Butler, bot
from states.quiz import Quiz


# –°—Ç–∞—Ä—Ç –∏–≥—Ä—ã
@Mr_Butler.message_handler(commands=['quiz'])
async def user_register(message: types.Message):
    await message.answer("–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –í–∞—Å –Ω–∞ –í–∏–∫—Ç–æ—Ä–∏–Ω–µ <b>'–ó–∞ –∑–Ω–∞–Ω–∏—è - –î–ê!'</b>\n"
                         "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –∏–º—è –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã", parse_mode='html')
    await Quiz.name.set()

# –í—ã—Ö–æ–¥ –∏–∑ –∏–≥—Ä—ã
@Mr_Butler.message_handler(state='*', commands='–í—ã–π—Ç–∏')
@Mr_Butler.message_handler(Text(equals='–í—ã–π—Ç–∏', ignore_case=True), state='*')
async def cancel(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    print(type(current_state))
    if current_state is None:
        return None
    await state.finish()
    await message.reply('–ë—É–¥—É –∂–¥–∞—Ç—å, —á—Ç–æ –±—ã –µ—â–µ —Ä–∞–∑ —Å—ã–≥—Ä–∞—Ç—å!')

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
@Mr_Butler.message_handler(state='*', commands='–ü–æ–¥—Å–∫–∞–∑–∫–∞')
@Mr_Butler.message_handler(Text(equals='–ü–æ–¥—Å–∫–∞–∑–∫–∞', ignore_case=True), state='*')
async def cancel(message: types.Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        return None
    elif current_state == 'Quiz:first_answer':
        await message.reply('–û–Ω –µ—â–µ –Ω–µ–º–Ω–æ–∂–µ—á–∫–æ –ª—é–±–∏–ª –≤—ã–ø–∏—Ç—å –∏ –≤ –µ–≥–æ —á–µ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω –º—É–∑–µ–π-—Ü–µ–Ω—Ç—Ä –≤ –ú–æ—Å–∫–≤–µ')
    elif current_state == 'Quiz:second_answer':
        await message.reply('3 –±—É–∫–≤—ã, –ø–æ—á—Ç–∏ –∫–∞–∫ –¥—É–±')
    elif current_state == 'Quiz:third_answer':
        await message.reply('–ù–∞–π–¥–∏ –µ–µ –∑–¥–µ—Å—å https://skysmart.ru/articles/mathematic/formuly-sokrashennogo-umnozheniya')
    elif current_state == 'Quiz:fourth_answer':
        await message.reply('–ö—Ç–æ –ª—é–±–∏—Ç –º—ë–¥, –∫—Ä–æ–º–µ –º–µ–¥–≤–µ–¥–µ–π? –ò –≤ —É–º–µ–Ω—å—à–∏—Ç–µ–ª—å–Ω–æ-–ª–∞—Å–∫–∞—Ç–µ–ª—å–Ω–æ–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞')

# –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
@Mr_Butler.message_handler(state=Quiz.name)
async def get_first_answer(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await bot.send_photo(message.from_user.id,
                         photo=open('foto/saw.jpg', 'rb'),
                         caption=f"–û—Ç–ª–∏—á–Ω–æ, {message.text}! –¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å.\n"
                         "<u>–í–æ–ø—Ä–æ—Å 1.</u> –ö–∞–∫ –∑–≤–∞–ª–∏ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –†–§? (–§–∞–º–∏–ª–∏—è)",
                         parse_mode='html', reply_markup=cancel_kb)
    await Quiz.next()

# –í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å
@Mr_Butler.message_handler(state=Quiz.first_answer)
async def get_second_answer(message: types.Message, state: FSMContext):
    if message.text.lower() == '–µ–ª—å—Ü–∏–Ω':
        await state.update_data(first_answer=message.text)
        await message.answer("–í–µ—Ä–Ω–æ!ü•≥\n"
                             "–î–∞–≤–∞–π—Ç–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.\n"
                             "<u>–í–æ–ø—Ä–æ—Å 2.</u>–ö–∞–∫ –≥–µ–π–º–µ—Ä—ã –Ω–∞–∑—ã–≤–∞—é—Ç –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–º–µ–µ—Ç –∏–≥—Ä–∞—Ç—å?",
                             parse_mode='html', reply_markup=cancel_kb)
        await Quiz.next()
    elif message.text.lower() == '–µ–ª—å—Ü—ã–Ω':
        await state.update_data(first_answer=message.text)
        await message.answer("–ù—É –≤–æ–æ–±—â–µ –æ–Ω '–ï–ª—å—Ü<b>–ò</b>–Ω', –Ω–æ –∑–∞—Å—á–∏—Ç–∞–µ–º –∫–∞–∫ –≤–µ—Ä–Ω–æü§´\n"
                             "–î–∞–≤–∞–π—Ç–µ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ.\n"
                             "<u>–í–æ–ø—Ä–æ—Å 2.</u>–ö–∞–∫ –≥–µ–π–º–µ—Ä—ã –Ω–∞–∑—ã–≤–∞—é—Ç –∏–≥—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —É–º–µ–µ—Ç –∏–≥—Ä–∞—Ç—å?\n(3 –ë–£–ö–í–ê)",
                             parse_mode='html', reply_markup=cancel_kb)
        await Quiz.next()
    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–¥—É–º–∞–π—Ç–µ –µ—â–µ. –ö–∞–∫ –Ω–∞–¥—É–º–∞–µ—Ç–µ, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∏–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ.')
        await state.finish()

# –¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å
@Mr_Butler.message_handler(state=Quiz.second_answer)
async def get_third_answer(message: types.Message, state: FSMContext):
    if message.text.lower() == '–Ω—É–±':
        await state.update_data(second_answer=message.text)
        await bot.send_photo(message.from_user.id,
                             photo=open('foto/formula.jpg', 'rb'),
                             caption="–û—Ç–ª–∏—á–Ω–æ! –í—Å–µ–º –Ω–∞–º –ø—Ä–∏—Ö–æ–¥–∏–ª–æ—Å—å –∏–≥—Ä–∞—Ç—å —Å –Ω–∏–º–∏. –ï–¥–µ–º –¥–∞–ª—å—à–µ .\n"
                                    "<u>–í–æ–ø—Ä–æ—Å 3.</u>–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–æ—Ä–º—É–ª–∞. —Ä–µ—à–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ?\n"
                                    "P.S. –ê –í—ã –¥—É–º–∞–ª–∏ –º—ã —Ç—É—Ç —à—É—Ç–∫–∏ —à—É—Ç–∏—Ç—å –±—É–¥–µ–º?",
                             parse_mode='html', reply_markup=cancel_kb)

        await Quiz.next()
    else:
        await message.answer(f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–¥—É–º–∞–π—Ç–µ –µ—â–µ. –ö–∞–∫ –Ω–∞–¥—É–º–∞–µ—Ç–µ, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∏–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ.')
        await state.finish()

# –ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å
@Mr_Butler.message_handler(state=Quiz.third_answer)
async def get_username(message: types.Message, state: FSMContext):
    if message.text.lower() == '—Ñ–æ—Ä–º—É–ª–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞ —Ä–∞–∑–Ω–æ—Å—Ç–∏':
        await state.update_data(third_answer=message.text)
        await bot.send_photo(message.from_user.id,
                             photo=open('foto/respect.jpg', 'rb'),
                             caption="–í–æ—É.–ú–æ—ë –ø–æ—á—Ç–µ–Ω–∏–µ —Å—É–¥–∞—Ä—å!\n"
                                     "–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–¥ –Ω–∏–º –±–∏–ª–æ—Å—å –≥—Ä—É–ø–ø–∞ —É—á–µ–Ω—ã—Ö –∏ –ì–∞—Ä–≤–æ—Ä–¥–∞, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–µ—Ä–Ω–æ—ã–π –æ—Ç–≤–µ—Ç"
                                     "<u>–í–æ–ø—Ä–æ—Å 4.</u> '–ñ–∞–ª–∫–æ —É..'",
                             parse_mode='html', reply_markup=cancel_kb)
        await Quiz.next()
    elif message.text.lower() == '–∫–≤–∞–¥—Ä–∞—Ç–∞ —Ä–∞–∑–Ω–æ—Å—Ç–∏':
        await state.update_data(third_answer=message.text)
        await bot.send_photo(message.from_user.id,
                             photo=open('foto/respect.jpg', 'rb'),
                             caption="–í–æ—É.–ú–æ—ë –ø–æ—á—Ç–µ–Ω–∏–µ —Å—É–¥–∞—Ä—å!\n"
                                    "–û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å, –Ω–∞–¥ –Ω–∏–º –±–∏–ª–æ—Å—å –≥—Ä—É–ø–ø–∞ —É—á–µ–Ω—ã—Ö –∏ –ì–∞—Ä–≤–æ—Ä–¥–∞, –Ω–æ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–ª–∏ –≤–µ—Ä–Ω–æ—ã–π –æ—Ç–≤–µ—Ç"
                                    "<u>–í–æ–ø—Ä–æ—Å 4.</u> '–ñ–∞–ª–∫–æ —É..'",
                             parse_mode='html', reply_markup=cancel_kb)
        await Quiz.next()
    else:
        await message.answer('–ù–µ —Å–æ–≤—Å–µ–º —Ç–∞–∫,  –ø–æ–¥—É–º–∞–π—Ç–µ –µ—â–µ. –ö–∞–∫ –Ω–∞–¥—É–º–∞–µ—Ç–µ, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∏–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ.')
        await state.finish()

# –ö–æ–Ω–µ—Ü –∏–≥—Ä—ã
@Mr_Butler.message_handler(state=Quiz.fourth_answer)
async def get_fourth_answer(message: types.Message, state: FSMContext):
    response_list = ['–ø—á–µ–ª–∫–∞', '–ø—á–µ–ª–∫–∏', '–ø—á—ë–ª–∫–∞', '–ø—á—ë–ª–∫–∞']
    if message.text.lower() in response_list:
        await state.update_data(fourth_answer=message.text)
        data = await state.get_data()
        await bot.send_photo(message.from_user.id,
                             photo=open('foto/bee.jpg', 'rb'),
                             caption="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤ –í–∏–∫—Ç–æ—Ä–∏–Ω–µ!\n"
                                    f"–í—ã –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ {data['first_answer']} –±—ã–ª –ø–µ—Ä–≤—ã–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –†–§\n"
                                    f"–•–æ—Ç—è –±—ã —Ä–∞–∑ –∏–≥—Ä–∞–ª–∏ –≤ –∫–æ–º–∞–Ω–¥–µ, –≥–¥–µ –µ—Å—Ç—å –≥–æ—Å–ø–æ–¥–∏–Ω {data['second_answer']}\n"
                                    f"–®–∞—Ä–∏—Ç–µ –∑–∞ –º–∞—Ç–µ–º–∞—Ç–∏–∫—É\n"
                                    f"–ò –∑–Ω–∞–µ—Ç–µ —á—Ç–æ –Ω–µ –¥—Ä—É–≥–∞ –∂–∞–ª–∫–æ, –∫–æ–≥–¥–∞ –æ–Ω –ø–æ—Ç—Ä–∞—Ç–∏–ª –≤—Å–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å–ø–æ—Ä—Ç"
                                    f",–∞ –∂–∞–ª–∫–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —É {data['fourth_answer']}\n"
                                    f"–í—ã –ª—É—á—à–∏–π!")

    else:
        await message.answer('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç, –ø–æ–¥—É–º–∞–π—Ç–µ –µ—â–µ. –ö–∞–∫ –Ω–∞–¥—É–º–∞–µ—Ç–µ, –ø—Ä–∏—Ö–æ–¥–∏—Ç–µ –∏–≥—Ä–∞—Ç—å –∑–∞–Ω–æ–≤–æ.')
    await state.finish()

